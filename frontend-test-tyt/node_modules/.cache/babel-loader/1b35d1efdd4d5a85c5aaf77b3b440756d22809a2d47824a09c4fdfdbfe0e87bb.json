{"ast":null,"code":"var _jsxFileName = \"/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/components/RedimirCodigos.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport checkCodService from '../services/checkCodService'; // Importa el servicio para verificar el código\nimport { useAuth } from '../context/AuthContext'; // Importa el contexto de autenticación\nimport './RedimirCodigos.css'; // Importa el archivo CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedimirCodigos = () => {\n  _s();\n  const {\n    token\n  } = useAuth(); // Obtenemos el token del contexto de autenticación\n  const [cod, setCod] = useState('');\n  const [isAvailable, setIsAvailable] = useState(false);\n  const [msgResponse, setMsgResponse] = useState('');\n  const [error, setError] = useState('');\n  const handleCodChange = event => {\n    setCod(event.target.value);\n  };\n  const handleCheckCod = async () => {\n    try {\n      const response = await checkCodService(cod, token);\n      setIsAvailable(response.is_available);\n      setMsgResponse(response.msg_response);\n      setError('');\n    } catch (error) {\n      setIsAvailable(\"false\");\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"redimir-codigos-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Redimir C\\xF3digos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: cod,\n        onChange: handleCodChange,\n        placeholder: \"Ingrese el c\\xF3digo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCheckCod,\n        children: \"Verificar C\\xF3digo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), msgResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: isAvailable == \"true\" ? \"success-message\" : \"error-message\",\n      children: msgResponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), isAvailable == \"true\" && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/eventos\",\n      className: \"link-eventos\",\n      children: \"Ir a la lista de eventos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(RedimirCodigos, \"DJIg62WAtu/dIdGoCMP0KxPkBJM=\", false, function () {\n  return [useAuth];\n});\n_c = RedimirCodigos;\nexport default RedimirCodigos;\nvar _c;\n$RefreshReg$(_c, \"RedimirCodigos\");","map":{"version":3,"names":["React","useState","Link","checkCodService","useAuth","jsxDEV","_jsxDEV","RedimirCodigos","_s","token","cod","setCod","isAvailable","setIsAvailable","msgResponse","setMsgResponse","error","setError","handleCodChange","event","target","value","handleCheckCod","response","is_available","msg_response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","to","_c","$RefreshReg$"],"sources":["/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/components/RedimirCodigos.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport checkCodService from '../services/checkCodService'; // Importa el servicio para verificar el código\nimport { useAuth } from '../context/AuthContext'; // Importa el contexto de autenticación\nimport './RedimirCodigos.css'; // Importa el archivo CSS\n\nconst RedimirCodigos = () => {\n  const { token } = useAuth(); // Obtenemos el token del contexto de autenticación\n  const [cod, setCod] = useState('');\n  const [isAvailable, setIsAvailable] = useState(false);\n  const [msgResponse, setMsgResponse] = useState('');\n  const [error, setError] = useState('');\n\n  const handleCodChange = (event) => {\n    setCod(event.target.value);\n  };\n\n  const handleCheckCod = async () => {\n    try {\n      const response = await checkCodService(cod, token); \n      setIsAvailable(response.is_available);\n      setMsgResponse(response.msg_response);\n      setError('');\n    } catch (error) {\n      setIsAvailable(\"false\");\n      setError(error.message);\n    }\n  };\n\n  return (\n    <div className=\"redimir-codigos-container\">\n      <h2>Redimir Códigos</h2>\n      <div className=\"form-container\">\n        <input\n          type=\"text\"\n          value={cod}\n          onChange={handleCodChange}\n          placeholder=\"Ingrese el código\"\n        />\n        <button onClick={handleCheckCod}>Verificar Código</button>\n      </div>\n      {/* {error && <p className=\"error-message\">{error}</p>} */}\n      {msgResponse && (\n        <p className={isAvailable == \"true\" ? \"success-message\" : \"error-message\"}>{msgResponse}</p>\n      )}\n      {isAvailable == \"true\" && (\n        <Link to=\"/eventos\" className=\"link-eventos\">\n          Ir a la lista de eventos\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default RedimirCodigos;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}