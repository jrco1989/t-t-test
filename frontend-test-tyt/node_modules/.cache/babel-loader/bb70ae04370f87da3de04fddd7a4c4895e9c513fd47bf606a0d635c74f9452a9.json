{"ast":null,"code":"import axios from 'axios';\nimport API_BASE_URL from '../config.js';\nconst checkCodService = async (cod, token) => {\n  try {\n    if (!token) {\n      throw new Error('No token available');\n    }\n    const response = await axios.get(`${API_BASE_URL}/check-cod/?cod=${cod}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport default checkCodService;","map":{"version":3,"names":["axios","API_BASE_URL","checkCodService","cod","token","Error","response","get","headers","Authorization","data","error"],"sources":["/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/services/checkCodService.js"],"sourcesContent":["import axios from 'axios';\nimport API_BASE_URL from '../config.js';\n\nconst checkCodService = async (cod, token) => {\n  try {\n    if (!token) {\n      throw new Error('No token available');\n    }\n\n    const response = await axios.get(`${API_BASE_URL}/check-cod/?cod=${cod}`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport default checkCodService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,cAAc;AAEvC,MAAMC,eAAe,GAAG,MAAAA,CAAOC,GAAG,EAAEC,KAAK,KAAK;EAC5C,IAAI;IACF,IAAI,CAACA,KAAK,EAAE;MACV,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAE,GAAEN,YAAa,mBAAkBE,GAAI,EAAC,EAAE;MACxEK,OAAO,EAAE;QACPC,aAAa,EAAG,UAASL,KAAM;MACjC;IACF,CAAC,CAAC;IAEF,OAAOE,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIN,KAAK,CAACM,KAAK,CAAC;EACxB;AACF,CAAC;AAED,eAAeT,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}