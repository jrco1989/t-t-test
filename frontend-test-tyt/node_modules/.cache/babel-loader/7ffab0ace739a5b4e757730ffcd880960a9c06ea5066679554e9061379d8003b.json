{"ast":null,"code":"import axios from'axios';import API_BASE_URL from'../config';const countCodService=async token=>{try{if(!token){throw new Error('No token available');}const response=await axios.get(\"\".concat(API_BASE_URL,\"/count-cods/\"),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(error){throw new Error(error);}};export default countCodService;","map":{"version":3,"names":["axios","API_BASE_URL","countCodService","token","Error","response","get","concat","headers","Authorization","data","error"],"sources":["/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/services/countCodService.js"],"sourcesContent":["import axios from 'axios';\nimport API_BASE_URL from '../config';\n\nconst countCodService = async (token) => {\n  try {\n    if (!token) {\n      throw new Error('No token available');\n    }\n\n    const response = await axios.get(`${API_BASE_URL}/count-cods/`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport default countCodService;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,YAAY,KAAM,WAAW,CAEpC,KAAM,CAAAC,eAAe,CAAG,KAAO,CAAAC,KAAK,EAAK,CACvC,GAAI,CACF,GAAI,CAACA,KAAK,CAAE,CACV,KAAM,IAAI,CAAAC,KAAK,CAAC,oBAAoB,CAAC,CACvC,CAEA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,KAAK,CAACM,GAAG,IAAAC,MAAA,CAAIN,YAAY,iBAAgB,CAC9DO,OAAO,CAAE,CACPC,aAAa,WAAAF,MAAA,CAAYJ,KAAK,CAChC,CACF,CAAC,CAAC,CAEF,MAAO,CAAAE,QAAQ,CAACK,IAAI,CACtB,CAAE,MAAOC,KAAK,CAAE,CACd,KAAM,IAAI,CAAAP,KAAK,CAACO,KAAK,CAAC,CACxB,CACF,CAAC,CAED,cAAe,CAAAT,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}