{"ast":null,"code":"var _jsxFileName = \"/home/poly/projects/tyt/frontend-test-tyt/frontend-test/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Header.css'; // Importa el archivo CSS para estilos\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const {\n    username,\n    logout,\n    token\n  } = useAuth(); // Obtiene el nombre de usuario, la función de logout y el token\n  const [availableCodes, setAvailableCodes] = useState(0);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const handleLogout = () => {\n    logout();\n    navigate('/login'); // Redirige a la página de inicio de sesión después de cerrar sesión\n  };\n  useEffect(() => {\n    const handleNavToggle = () => {\n      const navContainer = document.querySelector(\".navbar.navbar-expand-md.navbar-light.bg-light\");\n      navContainer.classList.toggle(\"nav-expanded\");\n    };\n    const navbarToggler = document.querySelector(\".navbar-toggler.order-2.order-md-1\");\n    if (navbarToggler) {\n      navbarToggler.addEventListener(\"click\", handleNavToggle);\n    }\n    return () => {\n      if (navbarToggler) {\n        navbarToggler.removeEventListener(\"click\", handleNavToggle);\n      }\n    };\n  }, []);\n  const isActive = path => {\n    return location.pathname === path ? 'active' : '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-md navbar-light bg-light\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"nehfkjQnNKdp9eIAwDX23mjBs7s=\", false, function () {\n  return [useAuth, useNavigate, useLocation];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","useLocation","useAuth","Button","jsxDEV","_jsxDEV","Header","_s","username","logout","token","availableCodes","setAvailableCodes","navigate","location","handleLogout","handleNavToggle","navContainer","document","querySelector","classList","toggle","navbarToggler","addEventListener","removeEventListener","isActive","path","pathname","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/poly/projects/tyt/frontend-test-tyt/frontend-test/src/components/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './Header.css'; // Importa el archivo CSS para estilos\nimport { Button } from 'react-bootstrap';\n\nconst Header = () => {\n  const { username, logout, token } = useAuth(); // Obtiene el nombre de usuario, la función de logout y el token\n  const [availableCodes, setAvailableCodes] = useState(0);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n\n\n  const handleLogout = () => {\n    logout();\n    navigate('/login'); // Redirige a la página de inicio de sesión después de cerrar sesión\n  };\n\n  useEffect(() => {\n    const handleNavToggle = () => {\n      const navContainer = document.querySelector(\".navbar.navbar-expand-md.navbar-light.bg-light\");\n      navContainer.classList.toggle(\"nav-expanded\");\n    };\n\n    const navbarToggler = document.querySelector(\".navbar-toggler.order-2.order-md-1\");\n    if (navbarToggler) {\n      navbarToggler.addEventListener(\"click\", handleNavToggle);\n    }\n\n    return () => {\n      if (navbarToggler) {\n        navbarToggler.removeEventListener(\"click\", handleNavToggle);\n      }\n    };\n  }, []);\n\n  const isActive = (path) => {\n    return location.pathname === path ? 'active' : '';\n  };\n\n  return (\n    <header className=\"header\">\n      <nav className=\"navbar navbar-expand-md navbar-light bg-light\">\n        \n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACjE,SAASC,OAAO,QAAQ,wBAAwB;AAChD,OAAO,cAAc,CAAC,CAAC;AACvB,SAASC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM;IAAEC,QAAQ;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMgB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAI9B,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzBN,MAAM,CAAC,CAAC;IACRI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd,MAAMkB,eAAe,GAAGA,CAAA,KAAM;MAC5B,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,gDAAgD,CAAC;MAC7FF,YAAY,CAACG,SAAS,CAACC,MAAM,CAAC,cAAc,CAAC;IAC/C,CAAC;IAED,MAAMC,aAAa,GAAGJ,QAAQ,CAACC,aAAa,CAAC,oCAAoC,CAAC;IAClF,IAAIG,aAAa,EAAE;MACjBA,aAAa,CAACC,gBAAgB,CAAC,OAAO,EAAEP,eAAe,CAAC;IAC1D;IAEA,OAAO,MAAM;MACX,IAAIM,aAAa,EAAE;QACjBA,aAAa,CAACE,mBAAmB,CAAC,OAAO,EAAER,eAAe,CAAC;MAC7D;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,QAAQ,GAAIC,IAAI,IAAK;IACzB,OAAOZ,QAAQ,CAACa,QAAQ,KAAKD,IAAI,GAAG,QAAQ,GAAG,EAAE;EACnD,CAAC;EAED,oBACErB,OAAA;IAAQuB,SAAS,EAAC,QAAQ;IAAAC,QAAA,eACxBxB,OAAA;MAAKuB,SAAS,EAAC;IAA+C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEzD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAC1B,EAAA,CA1CID,MAAM;EAAA,QAC0BJ,OAAO,EAE1BF,WAAW,EACXC,WAAW;AAAA;AAAAiC,EAAA,GAJxB5B,MAAM;AA4CZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}