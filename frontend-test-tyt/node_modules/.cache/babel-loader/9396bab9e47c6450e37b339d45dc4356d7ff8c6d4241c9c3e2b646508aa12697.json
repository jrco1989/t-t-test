{"ast":null,"code":"var _jsxFileName = \"/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(null);\n  const [username, setUsername] = useState(null); // Agrega el estado para el nombre de usuario\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const savedToken = localStorage.getItem('token');\n    const savedUsername = localStorage.getItem('username'); // Obtén el nombre de usuario del almacenamiento local\n    if (savedToken) {\n      setToken(savedToken);\n      setUsername(savedUsername); // Establece el nombre de usuario almacenado\n    }\n    setLoading(false);\n  }, []);\n  const login = (newToken, newUsername) => {\n    setToken(newToken);\n    setUsername(newUsername); // Establece el nombre de usuario al iniciar sesión\n    localStorage.setItem('token', newToken);\n    localStorage.setItem('username', newUsername); // Almacena el nombre de usuario en el almacenamiento local\n  };\n  const logout = () => {\n    setToken(null);\n    setUsername(null); // Borra el nombre de usuario al cerrar sesión\n    localStorage.removeItem('token');\n    localStorage.removeItem('username'); // Borra el nombre de usuario del almacenamiento local\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      username,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Z9sLShl7AkoLOJ7D//Gqefd3ksw=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","username","setUsername","loading","setLoading","savedToken","localStorage","getItem","savedUsername","login","newToken","newUsername","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [token, setToken] = useState(null);\n  const [username, setUsername] = useState(null); // Agrega el estado para el nombre de usuario\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const savedToken = localStorage.getItem('token');\n    const savedUsername = localStorage.getItem('username'); // Obtén el nombre de usuario del almacenamiento local\n    if (savedToken) {\n      setToken(savedToken);\n      setUsername(savedUsername); // Establece el nombre de usuario almacenado\n    }\n    setLoading(false);\n  }, []);\n\n  const login = (newToken, newUsername) => {\n    setToken(newToken);\n    setUsername(newUsername); // Establece el nombre de usuario al iniciar sesión\n    localStorage.setItem('token', newToken);\n    localStorage.setItem('username', newUsername); // Almacena el nombre de usuario en el almacenamiento local\n  };\n\n  const logout = () => {\n    setToken(null);\n    setUsername(null); // Borra el nombre de usuario al cerrar sesión\n    localStorage.removeItem('token');\n    localStorage.removeItem('username'); // Borra el nombre de usuario del almacenamiento local\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, username, login, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,aAAa,GAAGF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IACxD,IAAIF,UAAU,EAAE;MACdL,QAAQ,CAACK,UAAU,CAAC;MACpBH,WAAW,CAACM,aAAa,CAAC,CAAC,CAAC;IAC9B;IACAJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAGA,CAACC,QAAQ,EAAEC,WAAW,KAAK;IACvCX,QAAQ,CAACU,QAAQ,CAAC;IAClBR,WAAW,CAACS,WAAW,CAAC,CAAC,CAAC;IAC1BL,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEF,QAAQ,CAAC;IACvCJ,YAAY,CAACM,OAAO,CAAC,UAAU,EAAED,WAAW,CAAC,CAAC,CAAC;EACjD,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBb,QAAQ,CAAC,IAAI,CAAC;IACdE,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACnBI,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCR,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;EACvC,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,KAAK;MAAEE,QAAQ;MAAEQ,KAAK;MAAEI,MAAM;MAAEV;IAAQ,CAAE;IAAAN,QAAA,EACtEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CAlCWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAoCzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO/B,UAAU,CAACG,WAAW,CAAC;AAChC,CAAC;AAAC4B,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}