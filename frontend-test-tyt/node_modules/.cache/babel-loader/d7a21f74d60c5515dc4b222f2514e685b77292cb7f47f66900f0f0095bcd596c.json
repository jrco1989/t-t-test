{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext'; // Importa el contexto de autenticación\n\nconst BASE_URL = 'https://api.locosporlapromo.com/api';\nconst checkCodService = async cod => {\n  _s();\n  try {\n    const {\n      token\n    } = useAuth(); // Obtiene el token de sesión desde el contexto\n    if (!token) {\n      throw new Error('No token available'); // Maneja el caso en el que no haya token disponible\n    }\n    const response = await axios.get(`${BASE_URL}/check-cod/?cod=${cod}`, {\n      headers: {\n        Authorization: `Bearer ${token}` // Agrega el token de sesión a los encabezados de la solicitud\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error.response.data.msg_response); // Imprime el error proporcionado por la API\n  }\n};\n_s(checkCodService, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\nexport default checkCodService;","map":{"version":3,"names":["axios","useAuth","BASE_URL","checkCodService","cod","_s","token","Error","response","get","headers","Authorization","data","error","console","log","msg_response"],"sources":["/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/services/checkCodService.js"],"sourcesContent":["import axios from 'axios';\nimport { useAuth } from '../context/AuthContext'; // Importa el contexto de autenticación\n\nconst BASE_URL = 'https://api.locosporlapromo.com/api';\n\nconst checkCodService = async (cod) => {\n  try {\n    const { token } = useAuth(); // Obtiene el token de sesión desde el contexto\n    if (!token) {\n      throw new Error('No token available'); // Maneja el caso en el que no haya token disponible\n    }\n    \n    const response = await axios.get(`${BASE_URL}/check-cod/?cod=${cod}`, {\n      headers: {\n        Authorization: `Bearer ${token}` // Agrega el token de sesión a los encabezados de la solicitud\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    throw new Error(error.response.data.msg_response); // Imprime el error proporcionado por la API\n  }\n};\n\nexport default checkCodService;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB,CAAC,CAAC;;AAElD,MAAMC,QAAQ,GAAG,qCAAqC;AAEtD,MAAMC,eAAe,GAAG,MAAOC,GAAG,IAAK;EAAAC,EAAA;EACrC,IAAI;IACF,MAAM;MAAEC;IAAM,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7B,IAAI,CAACK,KAAK,EAAE;MACV,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACzC;IAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAEP,QAAS,mBAAkBE,GAAI,EAAC,EAAE;MACpEM,OAAO,EAAE;QACPC,aAAa,EAAG,UAASL,KAAM,EAAC,CAAC;MACnC;IACF,CAAC,CAAC;IACF,OAAOE,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,MAAM,IAAIN,KAAK,CAACM,KAAK,CAACL,QAAQ,CAACI,IAAI,CAACI,YAAY,CAAC,CAAC,CAAC;EACrD;AACF,CAAC;AAACX,EAAA,CAjBIF,eAAe;EAAA,QAECF,OAAO;AAAA;AAiB7B,eAAeE,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}