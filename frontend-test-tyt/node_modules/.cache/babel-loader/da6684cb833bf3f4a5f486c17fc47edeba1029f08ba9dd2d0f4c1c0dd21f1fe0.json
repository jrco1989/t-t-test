{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nconst useEventService = () => {\n  _s();\n  const {\n    token\n  } = useAuth();\n  const getEvents = async () => {\n    if (!token) {\n      throw new Error('No token available');\n    }\n    console.log('Using token:', token); // Depuración: verificar el token\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    };\n    try {\n      const response = await axios.get('https://api.locosporlapromo.com/api/events/', config);\n      console.log('Response data:', response.data); // Depuración: verificar la respuesta de la API\n      return response.data;\n    } catch (error) {\n      console.error('API call error:', error); // Depuración: capturar errores de la API\n      throw error;\n    }\n  };\n  return {\n    getEvents\n  };\n};\n_s(useEventService, \"ZpOvj47KCDv4EW5BIUHQHDAsr3M=\", false, function () {\n  return [useAuth];\n});\nexport default useEventService;","map":{"version":3,"names":["axios","useAuth","useEventService","_s","token","getEvents","Error","console","log","config","headers","Authorization","response","get","data","error"],"sources":["/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/services/eventService.js"],"sourcesContent":["import axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\n\nconst useEventService = () => {\n  const { token } = useAuth();\n\n  const getEvents = async () => {\n    if (!token) {\n      throw new Error('No token available');\n    }\n\n    console.log('Using token:', token); // Depuración: verificar el token\n\n    const config = {\n      headers: { Authorization: `Bearer ${token}` }\n    };\n\n    try {\n      const response = await axios.get('https://api.locosporlapromo.com/api/events/', config);\n      console.log('Response data:', response.data); // Depuración: verificar la respuesta de la API\n      return response.data;\n    } catch (error) {\n      console.error('API call error:', error); // Depuración: capturar errores de la API\n      throw error;\n    }\n  };\n\n  return { getEvents };\n};\n\nexport default useEventService;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,wBAAwB;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM;IAAEC;EAAM,CAAC,GAAGH,OAAO,CAAC,CAAC;EAE3B,MAAMI,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACD,KAAK,EAAE;MACV,MAAM,IAAIE,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEAC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEJ,KAAK,CAAC,CAAC,CAAC;;IAEpC,MAAMK,MAAM,GAAG;MACbC,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASP,KAAM;MAAE;IAC9C,CAAC;IAED,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,6CAA6C,EAAEJ,MAAM,CAAC;MACvFF,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEI,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC9C,OAAOF,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC,CAAC,CAAC;MACzC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,OAAO;IAAEV;EAAU,CAAC;AACtB,CAAC;AAACF,EAAA,CAzBID,eAAe;EAAA,QACDD,OAAO;AAAA;AA0B3B,eAAeC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}