{"ast":null,"code":"import axios from'axios';import{useAuth}from'../context/AuthContext';import API_BASE_URL from'../config';const useEventPredictionsService=()=>{const getEventPredictions=async(token,eventId)=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/event/predictions/\").concat(eventId),{headers:{Authorization:\"Bearer \".concat(token)}});return response.data;}catch(error){console.error('Error fetching event predictions:',error);}};return{getEventPredictions};};export default useEventPredictionsService;","map":{"version":3,"names":["axios","useAuth","API_BASE_URL","useEventPredictionsService","getEventPredictions","token","eventId","response","get","concat","headers","Authorization","data","error","console"],"sources":["/Users/diegojaramillo/Desktop/frontend-polla-copa-america/src/services/useEventPredictionsService.js"],"sourcesContent":["import axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport API_BASE_URL from '../config';\n\nconst useEventPredictionsService = () => {\n    const getEventPredictions = async (token, eventId) => {        \n        try {\n            const response = await axios.get(`${API_BASE_URL}/event/predictions/${eventId}`, {\n                headers: {\n                    Authorization: `Bearer ${token}`\n                }\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching event predictions:', error);\n        }\n    };\n\n    return { getEventPredictions };\n};\n\nexport default useEventPredictionsService;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,KAAQ,wBAAwB,CAChD,MAAO,CAAAC,YAAY,KAAM,WAAW,CAEpC,KAAM,CAAAC,0BAA0B,CAAGA,CAAA,GAAM,CACrC,KAAM,CAAAC,mBAAmB,CAAG,KAAAA,CAAOC,KAAK,CAAEC,OAAO,GAAK,CAClD,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,KAAK,CAACQ,GAAG,IAAAC,MAAA,CAAIP,YAAY,wBAAAO,MAAA,CAAsBH,OAAO,EAAI,CAC7EI,OAAO,CAAE,CACLC,aAAa,WAAAF,MAAA,CAAYJ,KAAK,CAClC,CACJ,CAAC,CAAC,CACF,MAAO,CAAAE,QAAQ,CAACK,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAC7D,CACJ,CAAC,CAED,MAAO,CAAET,mBAAoB,CAAC,CAClC,CAAC,CAED,cAAe,CAAAD,0BAA0B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}