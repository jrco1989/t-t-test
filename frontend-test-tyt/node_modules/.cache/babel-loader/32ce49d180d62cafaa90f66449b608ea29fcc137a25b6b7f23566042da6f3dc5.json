{"ast":null,"code":"import axios from 'axios';\nimport API_BASE_URL from '../config';\nconst getEvents = async token => {\n  try {\n    if (!token) {\n      throw new Error('No token available');\n    }\n    const response = await axios.get(`${API_BASE_URL}/list-event/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport default getEvents;","map":{"version":3,"names":["axios","API_BASE_URL","getEvents","token","Error","response","get","headers","Authorization","data","error"],"sources":["/home/poly/projects/tyt/frontend-test-tyt/frontend-test/src/services/getEvents.js"],"sourcesContent":["import axios from 'axios';\nimport API_BASE_URL from '../config';\n\nconst getEvents = async (token) => {\n  try {\n    if (!token) {\n      throw new Error('No token available');\n    }\n\n    const response = await axios.get(`${API_BASE_URL}/list-event/`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    return response.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\n\nexport default getEvents;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,WAAW;AAEpC,MAAMC,SAAS,GAAG,MAAOC,KAAK,IAAK;EACjC,IAAI;IACF,IAAI,CAACA,KAAK,EAAE;MACV,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAE,GAAEL,YAAa,cAAa,EAAE;MAC9DM,OAAO,EAAE;QACPC,aAAa,EAAG,UAASL,KAAM;MACjC;IACF,CAAC,CAAC;IAEF,OAAOE,QAAQ,CAACI,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIN,KAAK,CAACM,KAAK,CAAC;EACxB;AACF,CAAC;AAED,eAAeR,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}